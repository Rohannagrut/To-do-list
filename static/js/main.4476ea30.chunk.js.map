{"version":3,"sources":["App.js","index.js"],"names":["App","useState","itemName","quantity","isSelected","items","setItems","inputValue","setInputValue","totalItemCount","setTotalItemCount","calculateTotal","reduce","total","item","className","value","onChange","event","target","placeholder","icon","faPlus","onClick","newItem","newItems","handleAddButtonClick","map","index","toggleComplete","faCheckCircle","faCircle","faChevronLeft","handleQuantityDecrease","faChevronRight","handleQuantityIncrease","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OA0GeA,EArGH,WAAM,MAESC,mBAAS,CAClC,CAAEC,SAAU,WAAYC,SAAU,EAAGC,YAAY,GACjD,CAAEF,SAAU,aAAcC,SAAU,EAAGC,YAAY,GACnD,CAAEF,SAAU,WAAYC,SAAU,EAAGC,YAAY,KALjC,mBAEVC,EAFU,KAEHC,EAFG,OASmBL,mBAAS,KAT5B,mBASVM,EATU,KASEC,EATF,OAU2BP,mBAAS,GAVpC,mBAUVQ,EAVU,KAUMC,EAVN,KA2CXC,EAAiB,WACtB,IAAMF,EAAiBJ,EAAMO,QAAO,SAACC,EAAOC,GAC3C,OAAOD,EAAQC,EAAKX,WAClB,GACHO,EAAkBD,IAGnB,OAEC,yBAAKM,UAAU,kBAEd,yBAAKA,UAAU,kBACf,wBAAIA,UAAU,SAAd,eACC,yBAAKA,UAAU,gBACd,2BAAOC,MAAOT,EACbU,SAAU,SAACC,GAAD,OAAWV,EAAcU,EAAMC,OAAOH,QAChDD,UAAU,iBAAiBK,YAAY,mBACxC,kBAAC,IAAD,CAAiBC,KAAMC,IAAQC,QAAS,kBAhDf,WAC5B,IAAMC,EAAU,CACftB,SAAUK,EACVJ,SAAU,EACVC,YAAY,GAEPqB,EAAQ,sBAAOpB,GAAP,CAAcmB,IAC5BlB,EAASmB,GACTjB,EAAc,IAwCmCkB,OAE/C,yBAAKX,UAAU,aACbV,EAAMsB,KAAI,SAACb,EAAMc,GAAP,OACV,yBAAKb,UAAU,kBACd,yBAAKA,UAAU,YACdQ,QAAS,kBA5BO,SAACK,GACvB,IAAMH,EAAQ,YAAOpB,GACrBoB,EAASG,GAAOxB,YAAcqB,EAASG,GAAOxB,WAC9CE,EAASmB,GAyBYI,CAAeD,KAG7Bd,EAAKV,WACL,oCACC,kBAAC,IAAD,CAAiBiB,KAAMS,MACvB,0BAAMf,UAAU,aAAaD,EAAKZ,WAGnC,oCACC,kBAAC,IAAD,CAAiBmB,KAAMU,MACvB,8BAAOjB,EAAKZ,YAIf,yBAAKa,UAAU,YACd,gCACC,kBAAC,IAAD,CAAiBM,KAAMW,IACtBT,QAAS,kBArDa,SAACK,GAC/B,IAAMH,EAAQ,YAAOpB,GACrBoB,EAASG,GAAOzB,WAChBG,EAASmB,GACTd,IAiDuBsB,CAAuBL,OAExC,kCAAQd,EAAKX,SAAb,KACA,gCACC,kBAAC,IAAD,CAAiBkB,KAAMa,IACtBX,QAAS,kBAlEa,SAACK,GAC/B,IAAMH,EAAQ,YAAOpB,GACrBoB,EAASG,GAAOzB,WAChBG,EAASmB,GACTd,IA8DuBwB,CAAuBP,aAM5C,yBAAKb,UAAU,SAAf,UAA+BN,MC/FnC2B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.4476ea30.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './index.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronRight, faChevronLeft, faCircle, faCheckCircle, faPlus } from '@fortawesome/free-solid-svg-icons';\n\nconst App = () => {\n\t// HINT: each \"item\" in our list names a name, a boolean to tell if its been completed, and a quantity\n\tconst [items, setItems] = useState([\n\t\t{ itemName: \"eg Maths\", quantity: 1, isSelected: false },\n\t\t{ itemName: \"Assingment\", quantity: 3, isSelected: false },\n\t\t{ itemName: \"Tutorial\", quantity: 2, isSelected: false },\n\n\t]);\n\n\tconst [inputValue, setInputValue] = useState(\" \");\n\tconst [totalItemCount, setTotalItemCount] = useState(0);\n\n\tconst handleAddButtonClick = () => {\n\t\tconst newItem = {\n\t\t\titemName: inputValue,\n\t\t\tquantity: 1,\n\t\t\tisSelected: false,\n\t\t}\n\t\tconst newItems = [...items, newItem];\n\t\tsetItems(newItems);\n\t\tsetInputValue('');\n\t}\n\n\tconst handleQuantityIncrease = (index) => {\n\t\tconst newItems = [...items];\n\t\tnewItems[index].quantity++;\n\t\tsetItems(newItems);\n\t\tcalculateTotal();\n\t}\n\n\n\tconst handleQuantityDecrease = (index) => {\n\t\tconst newItems = [...items];\n\t\tnewItems[index].quantity--;\n\t\tsetItems(newItems);\n\t\tcalculateTotal();\n\t}\n\n\tconst toggleComplete = (index) => {\n\t\tconst newItems = [...items];\n\t\tnewItems[index].isSelected = !newItems[index].isSelected;\n\t\tsetItems(newItems);\n\t}\n\tconst calculateTotal = () => {\n\t\tconst totalItemCount = items.reduce((total, item) => {\n\t\t\treturn total + item.quantity;\n\t\t}, 0);\n\t\tsetTotalItemCount(totalItemCount);\n\t}\n\n\treturn (\n\t\t\n\t\t<div className='app-background'>\n\t\t\t\n\t\t\t<div className='main-container'>\n\t\t\t<h1 className='title'> To-Do-List</h1>\n\t\t\t\t<div className='add-item-box'>\n\t\t\t\t\t<input value={inputValue}\n\t\t\t\t\t\tonChange={(event) => setInputValue(event.target.value)}\n\t\t\t\t\t\tclassName='add-item-input' placeholder='Add an item...' />\n\t\t\t\t\t<FontAwesomeIcon icon={faPlus} onClick={() => handleAddButtonClick()} />\n\t\t\t\t</div>\n\t\t\t\t<div className='item-list'>\n\t\t\t\t\t{items.map((item, index) =>\n\t\t\t\t\t\t<div className='item-container'>\n\t\t\t\t\t\t\t<div className='item-name'\n\t\t\t\t\t\t\t\tonClick={() => toggleComplete(index)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{/* HINT: replace false with a boolean indicating the item has been completed or not */}\n\t\t\t\t\t\t\t\t{item.isSelected ? (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faCheckCircle} />\n\t\t\t\t\t\t\t\t\t\t<span className='completed'>{item.itemName}</span>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faCircle} />\n\t\t\t\t\t\t\t\t\t\t<span>{item.itemName}</span>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='quantity'>\n\t\t\t\t\t\t\t\t<button>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faChevronLeft}\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleQuantityDecrease(index)} />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<span> {item.quantity} </span>\n\t\t\t\t\t\t\t\t<button>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faChevronRight}\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleQuantityIncrease(index)} />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>)}\n\n\t\t\t\t</div>\n\t\t\t\t<div className='total'>Total: {totalItemCount}</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}